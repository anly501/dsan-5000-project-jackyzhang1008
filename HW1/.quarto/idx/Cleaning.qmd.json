{"title":"Cleaning","markdown":{"yaml":{"title":"Cleaning","bibliography":"references.bib"},"headingText":"**Nuclear Energy Utilization Factor**","containsRefs":false,"markdown":"\n\n\n## Cleaning:\n\n```{python}\n# From https://www.eia.gov/nuclear/generation/index.html\nimport pandas as pd\nimport numpy as np\n#pd read xlsx\nusreact13 = pd.read_excel('../Data/Pre-Clean/Nuclear_Generation/usreact13.xlsx')\nusreact14 = pd.read_excel('../Data/Pre-Clean/Nuclear_Generation/usreact14.xlsx')\nusreact15 = pd.read_excel('../Data/Pre-Clean/Nuclear_Generation/usreact15.xlsx')\nusreact16 = pd.read_excel('../Data/Pre-Clean/Nuclear_Generation/usreact16.xlsx')\nusreact17 = pd.read_excel('../Data/Pre-Clean/Nuclear_Generation/usreact17.xlsx')\nusreact18 = pd.read_excel('../Data/Pre-Clean/Nuclear_Generation/usreact18.xlsx')\nusreact19 = pd.read_excel('../Data/Pre-Clean/Nuclear_Generation/usreact19.xlsx')\nusreact20 = pd.read_excel('../Data/Pre-Clean/Nuclear_Generation/usreact20.xlsx')\nusreact21 = pd.read_excel('../Data/Pre-Clean/Nuclear_Generation/usreact21.xlsx')\nusreact22 = pd.read_excel('../Data/Pre-Clean/Nuclear_Generation/usreact22.xlsx')\n\n# create a function make row 5 as column names and remove row 0-4 and reset index and drop colum 4-17\ndef make_header(df):\n    df.columns = df.iloc[4]\n    df = df.drop(df.index[0:5])\n    df = df.reset_index(drop=True)\n    df = df.drop(df.columns[4:17], axis=1)\n    return df\n\n# apply the function to all dataframes\nusreact13 = make_header(usreact13)\nusreact14 = make_header(usreact14)\nusreact15 = make_header(usreact15)\nusreact16 = make_header(usreact16)\nusreact17 = make_header(usreact17)\nusreact18 = make_header(usreact18)\nusreact19 = make_header(usreact19)\nusreact20 = make_header(usreact20)\nusreact21 = make_header(usreact21)\nusreact22 = make_header(usreact22)\n\n# create a function to replace \".\" and empty space with NaN, drop \"Plant ID\" column and rename \"Plant Name\" to \"Plant\", make colum \"Nameplate\",\"Summer\", \"Utilization Factor\" as numeric\ndef clean_df(df):\n    df = df.replace(r'^\\s*$', np.nan, regex=True)\n    df = df.drop(columns=['Plant ID'])\n    df = df.rename(columns={'Plant Name':'Plant'})\n    df['Nameplate'] = pd.to_numeric(df['Nameplate'], errors='coerce')\n    df['Summer'] = pd.to_numeric(df['Summer'], errors='coerce')\n    df['Utilization Factor'] = pd.to_numeric(df['Utilization Factor'], errors='coerce')\n    return df\n\n# apply the function to all dataframes\nusreact13 = clean_df(usreact13)\nusreact14 = clean_df(usreact14)\nusreact15 = clean_df(usreact15)\nusreact16 = clean_df(usreact16)\nusreact17 = clean_df(usreact17)\nusreact18 = clean_df(usreact18)\nusreact19 = clean_df(usreact19)\nusreact20 = clean_df(usreact20)\nusreact21 = clean_df(usreact21)\nusreact22 = clean_df(usreact22)\n\n# drop rows that colum \"State\" end with \"Total\" and reset index\ndef drop_total(df):\n    df = df[~df['State'].str.contains(\"Total\")]\n    df = df.reset_index(drop=True)\n    df = df.drop(columns=['Unit ID'])\n    return df\n\n# apply the function to all dataframes\nusreact13 = drop_total(usreact13)\nusreact14 = drop_total(usreact14)\nusreact15 = drop_total(usreact15)\nusreact16 = drop_total(usreact16)\nusreact17 = drop_total(usreact17)\nusreact18 = drop_total(usreact18)\nusreact19 = drop_total(usreact19)\nusreact20 = drop_total(usreact20)\nusreact21 = drop_total(usreact21)\nusreact22 = drop_total(usreact22)\n\n# drop state column, Nameplate, Summer than group by plant and average the data to one decimal place and reset index\ndef group_plant(df):\n    df = df.drop(columns=['State', 'Nameplate', 'Summer'])\n    df = df.groupby(['Plant'], as_index=False).mean().round(1)\n    df = df.reset_index(drop=True)\n    return df\n# apply the function to all dataframes\nusreact13 = group_plant(usreact13)\nusreact14 = group_plant(usreact14)\nusreact15 = group_plant(usreact15)\nusreact16 = group_plant(usreact16)\nusreact17 = group_plant(usreact17)\nusreact18 = group_plant(usreact18)\nusreact19 = group_plant(usreact19)\nusreact20 = group_plant(usreact20)\nusreact21 = group_plant(usreact21)\nusreact22 = group_plant(usreact22)\n\n# merge all dataframes based on \"Plant\" column, create new columns 2013-2022 and fill in the data\nusreact = pd.merge(usreact13, usreact14, on='Plant', how='outer')\nusreact = usreact.rename(columns={'Utilization Factor_x':'2013', 'Utilization Factor_y':'2014'})\nusreact = pd.merge(usreact, usreact15, on='Plant', how='outer')\nusreact = usreact.rename(columns={'Utilization Factor':'2015'})\nusreact = pd.merge(usreact, usreact16, on='Plant', how='outer')\nusreact = usreact.rename(columns={'Utilization Factor':'2016'})\nusreact = pd.merge(usreact, usreact17, on='Plant', how='outer')\nusreact = usreact.rename(columns={'Utilization Factor':'2017'})\nusreact = pd.merge(usreact, usreact18, on='Plant', how='outer')\nusreact = usreact.rename(columns={'Utilization Factor':'2018'})\nusreact = pd.merge(usreact, usreact19, on='Plant', how='outer')\nusreact = usreact.rename(columns={'Utilization Factor':'2019'})\nusreact = pd.merge(usreact, usreact20, on='Plant', how='outer')\nusreact = usreact.rename(columns={'Utilization Factor':'2020'})\nusreact = pd.merge(usreact, usreact21, on='Plant', how='outer')\nusreact = usreact.rename(columns={'Utilization Factor':'2021'})\nusreact = pd.merge(usreact, usreact22, on='Plant', how='outer')\nusreact = usreact.rename(columns={'Utilization Factor':'2022'})\n\n# drop rows with NaN values and reset index\nusreact = usreact.dropna()\nusreact = usreact.reset_index(drop=True)\n\n# output the dataframe to csv\n#usreact.to_csv('Nuclear_Energy_Utilization_Factor.csv', index=False)\n```\n\n## Result:\n\n![](images/paste-1.png)\n\n# **Consumption of Fuels for Electricity Generation and Useful Thermal Output(Nuclear)**\n\n## Cleaning:\n\n```{python}\n# https://www.eia.gov/opendata/browser/electricity/electric-power-operational-data?frequency=annual&data=consumption-for-eg-btu;total-consumption-btu;&facets=fueltypeid;&fueltypeid=NUC;&start=2013&end=2022&sortColumn=period;&sortDirection=desc;\n# API_Key = \"Bc2HtlspmpvpzuBbPfIi8HoancNTzVYN9YApx3fu\"\nimport requests\nimport pandas as pd\nimport numpy as np \nimport json\nimport csv\nthor_url = \"https://api.eia.gov/v2/electricity/electric-power-operational-data/data/?frequency=annual&data[0]=consumption-for-eg-btu&data[1]=total-consumption-btu&facets[fueltypeid][]=NUC&start=2013&end=2022&sort[0][column]=period&sort[0][direction]=desc&offset=0&length=5000&api_key=Bc2HtlspmpvpzuBbPfIi8HoancNTzVYN9YApx3fu\"\nresp = requests.get(thor_url)\ndata = resp.text\ndata = json.loads(data)\ndetails=data['response']['data']\nrows=[]\nfor chunk in details:\n    row=[]\n    for key,value in chunk.items():\n        value=value if value else np.nan\n        row.append(value)\n        # print('row',row)\n    rows.append(row)\n\n# Columns\ncolumns = ['period', 'location', 'stateDescription', 'sectorid', 'sectorDescription', 'fueltypeid', 'fuelTypeDescription', 'consumption-for-eg-btu', 'consumption-for-eg-btu-units', 'total-consumption-btu', 'total-consumption-btu-units']\n\n# import to pandas dataframe\ndf = pd.DataFrame(rows, columns=columns)\ndf = df.drop(columns=['consumption-for-eg-btu-units', 'total-consumption-btu-units', 'fueltypeid', 'location', 'fuelTypeDescription', 'consumption-for-eg-btu', 'sectorid', 'stateDescription'])\n# export to csv\n#df.to_csv('EIA_API_py.csv', index=False)\n```\n\n## Result:\n\n![](images/paste-2.png)\n\n# **Consumption of Fuels for Electricity Generation and Useful Thermal Output(Coal)**\n\n## Cleaning:\n\n```{txt}\n# https://www.eia.gov/opendata/browser/electricity/electric-power-operational-data?frequency=annual&data=consumption-for-eg-btu;total-consumption-btu;&facets=fueltypeid;&fueltypeid=COW;&start=2013&end=2022&sortColumn=period;&sortDirection=desc;\nlibrary(httr)\nlibrary(jsonlite)\nlibrary(tidyverse)\nres <- GET(\"https://api.eia.gov/v2/electricity/electric-power-operational-data/data/?frequency=annual&data[0]=consumption-for-eg-btu&data[1]=total-consumption-btu&facets[fueltypeid][]=COW&start=2013&end=2022&sort[0][column]=period&sort[0][direction]=desc&offset=0&length=5000&api_key=Bc2HtlspmpvpzuBbPfIi8HoancNTzVYN9YApx3fu\")\ndata <- fromJSON(rawToChar(res$content))\ndata <- data$response\nperiod <- c(data$data$period)\nlocation <- c(data$data$location)\nstateDescription <- c(data$data$stateDescription)\nsectorid <- c(data$data$sectorid)\nsectorDescription <- c(data$data$sectorDescription)\ntotal_consumption_btu <- c(data$data$`total-consumption-btu`)\ndf <- data.frame(period, location, stateDescription, sectorid, sectorDescription, total_consumption_btu)\nwrite.csv(df, \"/Users/jackyzhang/Documents/Python/DSAN-5000/HW/HW2/Part2/Code/EIA_API_r.csv\", row.names=FALSE)\n```\n\n## Result:\n\n![](images/paste-4.png)\n\n# **Energy Policy**\n\n[@ho2018]\n\n## Cleaning:\n\n```{python}\n# https://www-sciencedirect-com.proxy.library.georgetown.edu/science/article/pii/S030142151830377X\n\nimport fitz\nimport warnings\nwarnings.filterwarnings('ignore', category=FutureWarning)\n\n# Return the path to the txt file\npdf_reader = fitz.open('../Data/Pre-Clean/Energy_Policy.pdf')\n\n# Open the txt file to write the extracted text\nwith open('../Data/Cleaned/Energy_Policy.txt', \"w\") as txt_file:\n    # Iterate through each page in the PDF file\n    for page_num in range(pdf_reader.page_count):\n        # Get the current page\n        page = pdf_reader.load_page(page_num)\n        \n        # Extract text from the current page\n        text = page.get_text()\n        \n        # Write the text to the txt file\n        txt_file.write(text)\n\n# Close the PDF reader\npdf_reader.close()\n```\n\n## Result:\n\nContents lists available at ScienceDirect Energy Policy journal homepage: www.elsevier.com/locate/enpol “I can live with nuclear energy if…”: Exploring public perceptions of nuclear energy in Singapore Shirley S. Hoa,⁎, Jiemin Looia, Agnes S.F. Chuaha, Alisius D. Leonga, Natalie Pangb a Wee Kim Wee School of Communication and Information, Nanyang Technological University, 31 Nanyang Link, Singapore 637718, Singapore b IPS Social Lab, Institute of Policy Studies, Lee Kuan Yew School of Public Policy, National University of Singapore, 20 Evans Road, Singapore 259365, Singapore A R T I C L E I N F O Keywords: Nuclear energy Southeast Asia Singapore Psychometric paradigm Source credibility theory A B S T R A C T Considering the growing salience of nuclear energy in Southeast Asia, this study examines public perceptions of nuclear energy in Singapore, a technologically-advanced and aﬄuent nation well-equipped to develop nuclear energy capabilities. Drawing from the source credibility theory, this study examines the public's credibility perceptions of nuclear-related information sources, and their trust in potential stakeholders. Guided by the psychometric paradigm, this study also explores public perceptions of risks, beneﬁts, and support. Four focus group discussions were conducted with Singaporeans aged 18–69. Participants across diﬀerent age groups (e.g., Millennials, Generation X, Baby Boomers) concurred in their trust of potential stakeholders, risk perception, cost perception, and support. Intergenerational diﬀerences were observed for participants’ media use, credibility perceptions of nuclear-related information sources, and beneﬁt perception. This study contributed theoretically by applying the source credibility theory and psychometric paradigm in an under-studied context. Practical implications were provided for policymakers and communication practitioners to eﬀectively evaluate public awareness and acceptance for nuclear energy. Directions for future research were discussed. In conclusion, intergenerational similarities were observed for Singaporeans’ perceptions of risks, costs, and support. Meanwhile intergenerational diﬀerences were noted for their credibility perceptions of nuclear-related in- formation sources, trust in potential stakeholders, and beneﬁt perception. 1. Introduction Since its inception, nuclear energy development is an issue that has divided public perceptions (Ho, 2016). Supporters have advocated nuclear energy as a solution to several environmental issues due to its low carbon emissions (International Atomic Energy Agency, 2014). Additionally, it can address global rising energy demands and provide energy security by generating a reliable and high output of electricity (Ertör-Akyazı et al., 2012; IAEA, 2014). However, critics have opposed it due to the risks of nuclear accidents, improper radioactive waste management, weaponization of nuclear energy, and the substantial operating costs of nuclear power plants (IAEA, 2014). Such polarized attitudes toward nuclear energy are also reﬂected in national energy policies globally (Ho, 2016). For instance, Belgium, France, Germany, and Switzerland have decided to gradually discontinue their use of nuclear energy (Reuters, 2017, 2018; World Nuclear Association, 2016). Conversely, the United States and the United Kingdom plan to construct new nuclear power plants (CNN, 2017). These divided atti- tudes toward nuclear energy are similarly observed in Asia. While Indonesia and Thailand have plans to adopt nuclear energy (WNA, 2016), Vietnam recently abandoned its nuclear energy adoption plans, citing safety concerns and high costs as a deterrent (Nguyen and Ho, 2016). Most public opinion research on nuclear energy are premised in countries that currently possess industry-scale nuclear facilities (Besley and McComas, 2015; Ho et al., 2018; Keller et al., 2012; Mah et al., 2014; Park and Ohm, 2014; Stoutenborough et al., 2013; Venables et al., 2012). However, few studies are conducted in countries which are in the preliminary phases of nuclear energy development (Ho et al., 2018). A recent meta-analysis on public perceptions of nuclear energy found that most studies were conducted in North America and Europe, while limited studies were conducted in SEA (Ho et al., 2018). As such, this study seeks to address the research gap by exploring public per- ceptions in SEA countries, particularly, Singapore. Additionally, this\n\n# **RadNet**\n\n## Code\n\n```{python}\n# https://www.epa.gov/radnet/radnet-csv-file-downloads#DC\nimport pandas as pd\nimport glob\n\n# Read in the data\nfiles_path = sorted(glob.glob('../Data/Pre-Clean/rad_net/*.csv'))\ndfs = []\nfor file in files_path:\n    df = pd.read_csv(file)\n    dfs.append(df)\n\nfull_df = pd.concat(dfs, ignore_index=True)\n\n# Drop the GAMMA COUNT RATE R02 (CPM),GAMMA COUNT RATE R03 (CPM),GAMMA COUNT RATE R04 (CPM),GAMMA COUNT RATE R05 (CPM),GAMMA COUNT RATE R06 (CPM),GAMMA COUNT RATE R07 (CPM),GAMMA COUNT RATE R08 (CPM),GAMMA COUNT RATE R09 (CPM),STATUS cloums\nfull_df = full_df.drop(['SAMPLE COLLECTION TIME','GAMMA COUNT RATE R02 (CPM)','GAMMA COUNT RATE R03 (CPM)','GAMMA COUNT RATE R04 (CPM)','GAMMA COUNT RATE R05 (CPM)','GAMMA COUNT RATE R06 (CPM)','GAMMA COUNT RATE R07 (CPM)','GAMMA COUNT RATE R08 (CPM)','GAMMA COUNT RATE R09 (CPM)','STATUS'], axis=1)\n\n# Drop the rows with missing values\nfull_df = full_df.dropna()\nprint(full_df)\n```","srcMarkdownNoYaml":"\n\n# **Nuclear Energy Utilization Factor**\n\n## Cleaning:\n\n```{python}\n# From https://www.eia.gov/nuclear/generation/index.html\nimport pandas as pd\nimport numpy as np\n#pd read xlsx\nusreact13 = pd.read_excel('../Data/Pre-Clean/Nuclear_Generation/usreact13.xlsx')\nusreact14 = pd.read_excel('../Data/Pre-Clean/Nuclear_Generation/usreact14.xlsx')\nusreact15 = pd.read_excel('../Data/Pre-Clean/Nuclear_Generation/usreact15.xlsx')\nusreact16 = pd.read_excel('../Data/Pre-Clean/Nuclear_Generation/usreact16.xlsx')\nusreact17 = pd.read_excel('../Data/Pre-Clean/Nuclear_Generation/usreact17.xlsx')\nusreact18 = pd.read_excel('../Data/Pre-Clean/Nuclear_Generation/usreact18.xlsx')\nusreact19 = pd.read_excel('../Data/Pre-Clean/Nuclear_Generation/usreact19.xlsx')\nusreact20 = pd.read_excel('../Data/Pre-Clean/Nuclear_Generation/usreact20.xlsx')\nusreact21 = pd.read_excel('../Data/Pre-Clean/Nuclear_Generation/usreact21.xlsx')\nusreact22 = pd.read_excel('../Data/Pre-Clean/Nuclear_Generation/usreact22.xlsx')\n\n# create a function make row 5 as column names and remove row 0-4 and reset index and drop colum 4-17\ndef make_header(df):\n    df.columns = df.iloc[4]\n    df = df.drop(df.index[0:5])\n    df = df.reset_index(drop=True)\n    df = df.drop(df.columns[4:17], axis=1)\n    return df\n\n# apply the function to all dataframes\nusreact13 = make_header(usreact13)\nusreact14 = make_header(usreact14)\nusreact15 = make_header(usreact15)\nusreact16 = make_header(usreact16)\nusreact17 = make_header(usreact17)\nusreact18 = make_header(usreact18)\nusreact19 = make_header(usreact19)\nusreact20 = make_header(usreact20)\nusreact21 = make_header(usreact21)\nusreact22 = make_header(usreact22)\n\n# create a function to replace \".\" and empty space with NaN, drop \"Plant ID\" column and rename \"Plant Name\" to \"Plant\", make colum \"Nameplate\",\"Summer\", \"Utilization Factor\" as numeric\ndef clean_df(df):\n    df = df.replace(r'^\\s*$', np.nan, regex=True)\n    df = df.drop(columns=['Plant ID'])\n    df = df.rename(columns={'Plant Name':'Plant'})\n    df['Nameplate'] = pd.to_numeric(df['Nameplate'], errors='coerce')\n    df['Summer'] = pd.to_numeric(df['Summer'], errors='coerce')\n    df['Utilization Factor'] = pd.to_numeric(df['Utilization Factor'], errors='coerce')\n    return df\n\n# apply the function to all dataframes\nusreact13 = clean_df(usreact13)\nusreact14 = clean_df(usreact14)\nusreact15 = clean_df(usreact15)\nusreact16 = clean_df(usreact16)\nusreact17 = clean_df(usreact17)\nusreact18 = clean_df(usreact18)\nusreact19 = clean_df(usreact19)\nusreact20 = clean_df(usreact20)\nusreact21 = clean_df(usreact21)\nusreact22 = clean_df(usreact22)\n\n# drop rows that colum \"State\" end with \"Total\" and reset index\ndef drop_total(df):\n    df = df[~df['State'].str.contains(\"Total\")]\n    df = df.reset_index(drop=True)\n    df = df.drop(columns=['Unit ID'])\n    return df\n\n# apply the function to all dataframes\nusreact13 = drop_total(usreact13)\nusreact14 = drop_total(usreact14)\nusreact15 = drop_total(usreact15)\nusreact16 = drop_total(usreact16)\nusreact17 = drop_total(usreact17)\nusreact18 = drop_total(usreact18)\nusreact19 = drop_total(usreact19)\nusreact20 = drop_total(usreact20)\nusreact21 = drop_total(usreact21)\nusreact22 = drop_total(usreact22)\n\n# drop state column, Nameplate, Summer than group by plant and average the data to one decimal place and reset index\ndef group_plant(df):\n    df = df.drop(columns=['State', 'Nameplate', 'Summer'])\n    df = df.groupby(['Plant'], as_index=False).mean().round(1)\n    df = df.reset_index(drop=True)\n    return df\n# apply the function to all dataframes\nusreact13 = group_plant(usreact13)\nusreact14 = group_plant(usreact14)\nusreact15 = group_plant(usreact15)\nusreact16 = group_plant(usreact16)\nusreact17 = group_plant(usreact17)\nusreact18 = group_plant(usreact18)\nusreact19 = group_plant(usreact19)\nusreact20 = group_plant(usreact20)\nusreact21 = group_plant(usreact21)\nusreact22 = group_plant(usreact22)\n\n# merge all dataframes based on \"Plant\" column, create new columns 2013-2022 and fill in the data\nusreact = pd.merge(usreact13, usreact14, on='Plant', how='outer')\nusreact = usreact.rename(columns={'Utilization Factor_x':'2013', 'Utilization Factor_y':'2014'})\nusreact = pd.merge(usreact, usreact15, on='Plant', how='outer')\nusreact = usreact.rename(columns={'Utilization Factor':'2015'})\nusreact = pd.merge(usreact, usreact16, on='Plant', how='outer')\nusreact = usreact.rename(columns={'Utilization Factor':'2016'})\nusreact = pd.merge(usreact, usreact17, on='Plant', how='outer')\nusreact = usreact.rename(columns={'Utilization Factor':'2017'})\nusreact = pd.merge(usreact, usreact18, on='Plant', how='outer')\nusreact = usreact.rename(columns={'Utilization Factor':'2018'})\nusreact = pd.merge(usreact, usreact19, on='Plant', how='outer')\nusreact = usreact.rename(columns={'Utilization Factor':'2019'})\nusreact = pd.merge(usreact, usreact20, on='Plant', how='outer')\nusreact = usreact.rename(columns={'Utilization Factor':'2020'})\nusreact = pd.merge(usreact, usreact21, on='Plant', how='outer')\nusreact = usreact.rename(columns={'Utilization Factor':'2021'})\nusreact = pd.merge(usreact, usreact22, on='Plant', how='outer')\nusreact = usreact.rename(columns={'Utilization Factor':'2022'})\n\n# drop rows with NaN values and reset index\nusreact = usreact.dropna()\nusreact = usreact.reset_index(drop=True)\n\n# output the dataframe to csv\n#usreact.to_csv('Nuclear_Energy_Utilization_Factor.csv', index=False)\n```\n\n## Result:\n\n![](images/paste-1.png)\n\n# **Consumption of Fuels for Electricity Generation and Useful Thermal Output(Nuclear)**\n\n## Cleaning:\n\n```{python}\n# https://www.eia.gov/opendata/browser/electricity/electric-power-operational-data?frequency=annual&data=consumption-for-eg-btu;total-consumption-btu;&facets=fueltypeid;&fueltypeid=NUC;&start=2013&end=2022&sortColumn=period;&sortDirection=desc;\n# API_Key = \"Bc2HtlspmpvpzuBbPfIi8HoancNTzVYN9YApx3fu\"\nimport requests\nimport pandas as pd\nimport numpy as np \nimport json\nimport csv\nthor_url = \"https://api.eia.gov/v2/electricity/electric-power-operational-data/data/?frequency=annual&data[0]=consumption-for-eg-btu&data[1]=total-consumption-btu&facets[fueltypeid][]=NUC&start=2013&end=2022&sort[0][column]=period&sort[0][direction]=desc&offset=0&length=5000&api_key=Bc2HtlspmpvpzuBbPfIi8HoancNTzVYN9YApx3fu\"\nresp = requests.get(thor_url)\ndata = resp.text\ndata = json.loads(data)\ndetails=data['response']['data']\nrows=[]\nfor chunk in details:\n    row=[]\n    for key,value in chunk.items():\n        value=value if value else np.nan\n        row.append(value)\n        # print('row',row)\n    rows.append(row)\n\n# Columns\ncolumns = ['period', 'location', 'stateDescription', 'sectorid', 'sectorDescription', 'fueltypeid', 'fuelTypeDescription', 'consumption-for-eg-btu', 'consumption-for-eg-btu-units', 'total-consumption-btu', 'total-consumption-btu-units']\n\n# import to pandas dataframe\ndf = pd.DataFrame(rows, columns=columns)\ndf = df.drop(columns=['consumption-for-eg-btu-units', 'total-consumption-btu-units', 'fueltypeid', 'location', 'fuelTypeDescription', 'consumption-for-eg-btu', 'sectorid', 'stateDescription'])\n# export to csv\n#df.to_csv('EIA_API_py.csv', index=False)\n```\n\n## Result:\n\n![](images/paste-2.png)\n\n# **Consumption of Fuels for Electricity Generation and Useful Thermal Output(Coal)**\n\n## Cleaning:\n\n```{txt}\n# https://www.eia.gov/opendata/browser/electricity/electric-power-operational-data?frequency=annual&data=consumption-for-eg-btu;total-consumption-btu;&facets=fueltypeid;&fueltypeid=COW;&start=2013&end=2022&sortColumn=period;&sortDirection=desc;\nlibrary(httr)\nlibrary(jsonlite)\nlibrary(tidyverse)\nres <- GET(\"https://api.eia.gov/v2/electricity/electric-power-operational-data/data/?frequency=annual&data[0]=consumption-for-eg-btu&data[1]=total-consumption-btu&facets[fueltypeid][]=COW&start=2013&end=2022&sort[0][column]=period&sort[0][direction]=desc&offset=0&length=5000&api_key=Bc2HtlspmpvpzuBbPfIi8HoancNTzVYN9YApx3fu\")\ndata <- fromJSON(rawToChar(res$content))\ndata <- data$response\nperiod <- c(data$data$period)\nlocation <- c(data$data$location)\nstateDescription <- c(data$data$stateDescription)\nsectorid <- c(data$data$sectorid)\nsectorDescription <- c(data$data$sectorDescription)\ntotal_consumption_btu <- c(data$data$`total-consumption-btu`)\ndf <- data.frame(period, location, stateDescription, sectorid, sectorDescription, total_consumption_btu)\nwrite.csv(df, \"/Users/jackyzhang/Documents/Python/DSAN-5000/HW/HW2/Part2/Code/EIA_API_r.csv\", row.names=FALSE)\n```\n\n## Result:\n\n![](images/paste-4.png)\n\n# **Energy Policy**\n\n[@ho2018]\n\n## Cleaning:\n\n```{python}\n# https://www-sciencedirect-com.proxy.library.georgetown.edu/science/article/pii/S030142151830377X\n\nimport fitz\nimport warnings\nwarnings.filterwarnings('ignore', category=FutureWarning)\n\n# Return the path to the txt file\npdf_reader = fitz.open('../Data/Pre-Clean/Energy_Policy.pdf')\n\n# Open the txt file to write the extracted text\nwith open('../Data/Cleaned/Energy_Policy.txt', \"w\") as txt_file:\n    # Iterate through each page in the PDF file\n    for page_num in range(pdf_reader.page_count):\n        # Get the current page\n        page = pdf_reader.load_page(page_num)\n        \n        # Extract text from the current page\n        text = page.get_text()\n        \n        # Write the text to the txt file\n        txt_file.write(text)\n\n# Close the PDF reader\npdf_reader.close()\n```\n\n## Result:\n\nContents lists available at ScienceDirect Energy Policy journal homepage: www.elsevier.com/locate/enpol “I can live with nuclear energy if…”: Exploring public perceptions of nuclear energy in Singapore Shirley S. Hoa,⁎, Jiemin Looia, Agnes S.F. Chuaha, Alisius D. Leonga, Natalie Pangb a Wee Kim Wee School of Communication and Information, Nanyang Technological University, 31 Nanyang Link, Singapore 637718, Singapore b IPS Social Lab, Institute of Policy Studies, Lee Kuan Yew School of Public Policy, National University of Singapore, 20 Evans Road, Singapore 259365, Singapore A R T I C L E I N F O Keywords: Nuclear energy Southeast Asia Singapore Psychometric paradigm Source credibility theory A B S T R A C T Considering the growing salience of nuclear energy in Southeast Asia, this study examines public perceptions of nuclear energy in Singapore, a technologically-advanced and aﬄuent nation well-equipped to develop nuclear energy capabilities. Drawing from the source credibility theory, this study examines the public's credibility perceptions of nuclear-related information sources, and their trust in potential stakeholders. Guided by the psychometric paradigm, this study also explores public perceptions of risks, beneﬁts, and support. Four focus group discussions were conducted with Singaporeans aged 18–69. Participants across diﬀerent age groups (e.g., Millennials, Generation X, Baby Boomers) concurred in their trust of potential stakeholders, risk perception, cost perception, and support. Intergenerational diﬀerences were observed for participants’ media use, credibility perceptions of nuclear-related information sources, and beneﬁt perception. This study contributed theoretically by applying the source credibility theory and psychometric paradigm in an under-studied context. Practical implications were provided for policymakers and communication practitioners to eﬀectively evaluate public awareness and acceptance for nuclear energy. Directions for future research were discussed. In conclusion, intergenerational similarities were observed for Singaporeans’ perceptions of risks, costs, and support. Meanwhile intergenerational diﬀerences were noted for their credibility perceptions of nuclear-related in- formation sources, trust in potential stakeholders, and beneﬁt perception. 1. Introduction Since its inception, nuclear energy development is an issue that has divided public perceptions (Ho, 2016). Supporters have advocated nuclear energy as a solution to several environmental issues due to its low carbon emissions (International Atomic Energy Agency, 2014). Additionally, it can address global rising energy demands and provide energy security by generating a reliable and high output of electricity (Ertör-Akyazı et al., 2012; IAEA, 2014). However, critics have opposed it due to the risks of nuclear accidents, improper radioactive waste management, weaponization of nuclear energy, and the substantial operating costs of nuclear power plants (IAEA, 2014). Such polarized attitudes toward nuclear energy are also reﬂected in national energy policies globally (Ho, 2016). For instance, Belgium, France, Germany, and Switzerland have decided to gradually discontinue their use of nuclear energy (Reuters, 2017, 2018; World Nuclear Association, 2016). Conversely, the United States and the United Kingdom plan to construct new nuclear power plants (CNN, 2017). These divided atti- tudes toward nuclear energy are similarly observed in Asia. While Indonesia and Thailand have plans to adopt nuclear energy (WNA, 2016), Vietnam recently abandoned its nuclear energy adoption plans, citing safety concerns and high costs as a deterrent (Nguyen and Ho, 2016). Most public opinion research on nuclear energy are premised in countries that currently possess industry-scale nuclear facilities (Besley and McComas, 2015; Ho et al., 2018; Keller et al., 2012; Mah et al., 2014; Park and Ohm, 2014; Stoutenborough et al., 2013; Venables et al., 2012). However, few studies are conducted in countries which are in the preliminary phases of nuclear energy development (Ho et al., 2018). A recent meta-analysis on public perceptions of nuclear energy found that most studies were conducted in North America and Europe, while limited studies were conducted in SEA (Ho et al., 2018). As such, this study seeks to address the research gap by exploring public per- ceptions in SEA countries, particularly, Singapore. Additionally, this\n\n# **RadNet**\n\n## Code\n\n```{python}\n# https://www.epa.gov/radnet/radnet-csv-file-downloads#DC\nimport pandas as pd\nimport glob\n\n# Read in the data\nfiles_path = sorted(glob.glob('../Data/Pre-Clean/rad_net/*.csv'))\ndfs = []\nfor file in files_path:\n    df = pd.read_csv(file)\n    dfs.append(df)\n\nfull_df = pd.concat(dfs, ignore_index=True)\n\n# Drop the GAMMA COUNT RATE R02 (CPM),GAMMA COUNT RATE R03 (CPM),GAMMA COUNT RATE R04 (CPM),GAMMA COUNT RATE R05 (CPM),GAMMA COUNT RATE R06 (CPM),GAMMA COUNT RATE R07 (CPM),GAMMA COUNT RATE R08 (CPM),GAMMA COUNT RATE R09 (CPM),STATUS cloums\nfull_df = full_df.drop(['SAMPLE COLLECTION TIME','GAMMA COUNT RATE R02 (CPM)','GAMMA COUNT RATE R03 (CPM)','GAMMA COUNT RATE R04 (CPM)','GAMMA COUNT RATE R05 (CPM)','GAMMA COUNT RATE R06 (CPM)','GAMMA COUNT RATE R07 (CPM)','GAMMA COUNT RATE R08 (CPM)','GAMMA COUNT RATE R09 (CPM)','STATUS'], axis=1)\n\n# Drop the rows with missing values\nfull_df = full_df.dropna()\nprint(full_df)\n```"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"Cleaning.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":"cosmo","title":"Cleaning","bibliography":["references.bib"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}