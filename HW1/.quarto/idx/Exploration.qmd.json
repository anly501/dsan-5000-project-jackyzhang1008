{"title":"Exploration","markdown":{"yaml":{"title":"Exploration"},"headingText":"**Nuclear Energy Utilization Factor**","containsRefs":false,"markdown":"\n\n\n## **Data Import and Understanding**\n\n-   **Rows**: Each row corresponds to a different nuclear plant.\n\n-   **Columns**: The columns include the plant's name and its utilization factor for each year from 2013 to 2022.\n\n-   **Data Types**: The \"Plant\" column is of object data type (string), and the rest of the columns (2013 to 2022) are numerical.\n\n-   **Missing Values**: We need to check for any missing values in the dataset.\n\n```{python}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore', category=FutureWarning)\n\n# Read in data\nnuclear_data = pd.read_csv('../Data/EDA/Nuclear_Energy_Utilization_Factor.csv')\n\n# Checking for missing values\nmissing_values = nuclear_data.isnull().sum()\nprint(missing_values)\n```\n\n## **Descriptive Statistics**\n\nWe will calculate and report the following summary statistics for the numerical variables (utilization factor for the years 2013 to 2022):\n\n-   Mean\n\n-   Median\n\n-   Mode\n\n-   Standard Deviation\n\n-   Variance\n\n```{python}\n# Calculating descriptive statistics for the numerical variables\ndescriptive_stats = nuclear_data.describe(include=[float]).T\ndescriptive_stats['mode'] = nuclear_data.mode().iloc[0, 1:]\ndescriptive_stats['variance'] = descriptive_stats['std']**2\n\n# Displaying the descriptive statistics\nprint(descriptive_stats[['mean', '50%', 'mode', 'std', 'variance']])\n```\n\nHere are the descriptive statistics for the nuclear plants' utilization factors from 2013 to 2022:\n\n-   **Mean**: The average utilization factor for each year. It ranges from 90.836 in 2013 to 92.916 in 2019.\n\n-   **Median (50%)**: The middle value of the utilization factor for each year. It ranges from 92.55 in 2013 to 94.40 in 2022.\n\n-   **Mode**: The value that appears most frequently in each year. It varies across years, with some years having more common utilization factors than others.\n\n-   **Standard Deviation (std)**: Measures the amount of variation or dispersion from the average. A low standard deviation indicates that the values tend to be close to the mean, while a high standard deviation indicates that the values are spread out over a wider range.\n\n-   **Variance**: The square of the standard deviation. It provides a measure of how spread out the values are.\n\n## **Data Visualization**\n\nIn this section, we'll create visualizations to further explore the data's distribution, relationships between variables, and potential patterns or trends.\n\n1.  **Histograms**: To visualize the distribution of utilization factors for each year.\n\n2.  **Box Plots**: To observe the spread of the data and identify any potential outliers.\n\n### Histograms\n\n```{python}\n# Setting the aesthetic style of the plots\nsns.set_style(\"whitegrid\")\n\n# Creating histograms for the utilization factors of each year\nfig, axes = plt.subplots(nrows=3, ncols=4, figsize=(15, 10))\n\n# Flattening the 2D array of axes for easy iteration\naxes = axes.flatten()\n\n# Plotting the histograms\nfor i, year in enumerate(range(2013, 2023)):\n    sns.histplot(nuclear_data[str(year)], bins=20, kde=True, ax=axes[i])\n    axes[i].set_title(f'Distribution in {year}')\n    axes[i].set_xlabel('Utilization Factor')\n    axes[i].set_ylabel('Frequency')\n\n# Adjusting layout for better readability\nplt.tight_layout()\nplt.show()\n```\n\nThe histograms above depict the distribution of utilization factors for each nuclear plant across different years. Here are some observations:\n\n-   The distribution of utilization factors is fairly symmetric in most years, with a slight skewness in some years.\n\n-   The majority of the nuclear plants seem to operate with a high utilization factor, mostly around 90 to 100.\n\n-   There are a few years (e.g., 2016, 2020) where the distribution appears to be more spread out, indicating higher variability in the utilization factors.\n\n### Box Plots\n\n```{python}\nfig, axes = plt.subplots(nrows=3, ncols=4, figsize=(15, 10))\n\n# Flattening the 2D array of axes for easy iteration\naxes = axes.flatten()\n\n# Plotting the box plots\nfor i, year in enumerate(range(2013, 2023)):\n    sns.boxplot(x=nuclear_data[str(year)], ax=axes[i])\n    axes[i].set_title(f'Box Plot in {year}')\n    axes[i].set_xlabel('Utilization Factor')\n\n# Adjusting layout for better readability\nplt.tight_layout()\nplt.show()\n```\n\nThe box plots above provide a visual representation of the distribution of utilization factors for each year, highlighting the spread of the data and any potential outliers.\n\n-   The median (represented by the line inside the box) is consistently high across all years, mostly above 90.\n\n-   The interquartile range (IQR, represented by the height of the box) is relatively narrow, indicating that the middle 50% of the data points are close to each other.\n\n-   There are some potential outliers in various years, particularly in 2016 and 2020, where the utilization factors are significantly lower than the rest of the data.\n\n## **Correlation Analysis**\n\n```{python}\n# Calculating the correlation matrix\ncorrelation_matrix = nuclear_data.iloc[:, 1:].corr()\n\n# Creating a heatmap to visualize the correlation matrix\nplt.figure(figsize=(10, 8))\nsns.heatmap(correlation_matrix, annot=True, fmt=\".2f\", cmap=\"coolwarm\", vmin=-1, vmax=1)\nplt.title('Correlation Matrix of Utilization Factors (2013-2022)')\nplt.show()\n```\n\n-   Most of the correlations between different years are positive, suggesting that a higher utilization factor in one year is generally associated with a higher utilization factor in another year.\n\n-   The correlation coefficients are mostly in the range of 0.2 to 0.8, indicating a moderate positive relationship between the years.\n\n-   There are some years with higher correlations to each other (e.g., 2017 and 2019 with a correlation of 0.84), suggesting a stronger relationship in performance between these years.\n\n## **Hypothesis Generation**\n\nBased on the observed patterns and relationships in the data, we might formulate hypotheses such as:\n\n1.  **H1**: The utilization factor of a nuclear plant in one year is positively related to its utilization factor in the subsequent year.\n\n2.  **H2**: There are certain nuclear plants that consistently perform better or worse than others across all years.\n\n3.  **H3**: The variability in utilization factors has decreased or increased over the years.\n\n## **Identifying Outliers**\n\n```{python}\n# Calculating the average utilization factor for each nuclear plant over the years\nnuclear_data['Average'] = nuclear_data.iloc[:, 1:].mean(axis=1)\n\n# Displaying the nuclear plants sorted by their average utilization factor\nsorted_plants = nuclear_data[['Plant', 'Average']].sort_values(by='Average', ascending=False)\nprint(sorted_plants)\n```\n\n#### **High Performers:**\n\nThe nuclear plants with the highest average utilization factors over the years are:\n\n1.  **Peach Bottom**: 99.24\n\n2.  **Calvert Cliffs Nuclear Power Plant**: 98.61\n\n3.  **Dresden Generating Station**: 97.56\n\n4.  **Limerick**: 97.48\n\n5.  **Byron Generating Station**: 97.41\n\n#### **Low Performers:**\n\nThe nuclear plants with the lowest average utilization factors are:\n\n1.  **Grand Gulf**: 73.88\n\n2.  **Fermi**: 79.67\n\n3.  **Callaway**: 82.47\n\n4.  **Wolf Creek Generating Station**: 84.91\n\n5.  **Arkansas Nuclear One**: 85.13\n\n```{python}\n# Defining performance tiers based on the average utilization factor\nbins = [0, 80, 90, 95, 100]\nlabels = ['Low Performer (<80)', 'Below Average (80-90)', 'Above Average (90-95)', 'High Performer (>95)']\nnuclear_data['Performance Tier'] = pd.cut(nuclear_data['Average'], bins=bins, labels=labels, right=False)\n\n# Calculating the number of plants in each performance tier\nperformance_tiers = nuclear_data['Performance Tier'].value_counts().sort_index()\n\n# Displaying the number of plants in each performance tier\nprint(performance_tiers)\n```\n\nThe nuclear plants have been categorized into different performance tiers based on their average utilization factor:\n\n1.  **Low Performer (\\<80)**: 2 plants\n\n2.  **Below Average (80-90)**: 12 plants\n\n3.  **Above Average (90-95)**: 25 plants\n\n4.  **High Performer (\\>95)**: 11 plants\n\n```{python}\n# Function to identify outliers using the IQR method\ndef identify_outliers(data, column):\n    Q1 = data[column].quantile(0.25)\n    Q3 = data[column].quantile(0.75)\n    IQR = Q3 - Q1\n    outliers = data[(data[column] < (Q1 - 1.5 * IQR)) | (data[column] > (Q3 + 1.5 * IQR))]\n    return outliers[['Plant', column]]\n\n# Identifying outliers for each year\noutliers_dict = {}\nfor year in range(2013, 2023):\n    outliers = identify_outliers(nuclear_data, str(year))\n    if not outliers.empty:\n        outliers_dict[year] = outliers\n\n# Displaying the outliers for each year\nprint(outliers_dict)\n```\n\n#### **Outliers Identification:**\n\nOutliers have been identified for each year based on the IQR method. Here are the plants that were identified as outliers in each year:\n\n-   **2013**:\n\n    -   Arkansas Nuclear One (73.5)\n\n    -   Fermi (69.4)\n\n    -   Wolf Creek Generating Station (69.6)\n\n-   **2014**:\n\n    -   Davis Besse (74.4)\n\n-   **2016**:\n\n    -   Grand Gulf (47.9)\n\n    -   PSEG Salem Generating Station (76.8)\n\n    -   Watts Bar Nuclear Plant (62.6)\n\n-   **2017**:\n\n    -   Columbia Generating Station (78.8)\n\n    -   Grand Gulf (60.0)\n\n    -   Watts Bar Nuclear Plant (69.0)\n\n-   **2018**:\n\n    -   Fermi (74.2)\n\n    -   Grand Gulf (56.4)\n\n-   **2019**:\n\n    -   River Bend (75.8)\n\n    -   Waterford 3 (74.1)\n\n-   **2020**:\n\n    -   Callaway (70.7)\n\n    -   Fermi (60.6)\n\n    -   Grand Gulf (52.6)\n\n-   **2021**:\n\n    -   Callaway (39.3)\n\n    -   V C Summer (76.5)\n\n-   **2022**:\n\n    -   Fermi (66.7)\n\n    -   Grand Gulf (70.1)\n\n    -   Waterford 3 (77.0)\n\n## **Summary**","srcMarkdownNoYaml":"\n\n# **Nuclear Energy Utilization Factor**\n\n## **Data Import and Understanding**\n\n-   **Rows**: Each row corresponds to a different nuclear plant.\n\n-   **Columns**: The columns include the plant's name and its utilization factor for each year from 2013 to 2022.\n\n-   **Data Types**: The \"Plant\" column is of object data type (string), and the rest of the columns (2013 to 2022) are numerical.\n\n-   **Missing Values**: We need to check for any missing values in the dataset.\n\n```{python}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore', category=FutureWarning)\n\n# Read in data\nnuclear_data = pd.read_csv('../Data/EDA/Nuclear_Energy_Utilization_Factor.csv')\n\n# Checking for missing values\nmissing_values = nuclear_data.isnull().sum()\nprint(missing_values)\n```\n\n## **Descriptive Statistics**\n\nWe will calculate and report the following summary statistics for the numerical variables (utilization factor for the years 2013 to 2022):\n\n-   Mean\n\n-   Median\n\n-   Mode\n\n-   Standard Deviation\n\n-   Variance\n\n```{python}\n# Calculating descriptive statistics for the numerical variables\ndescriptive_stats = nuclear_data.describe(include=[float]).T\ndescriptive_stats['mode'] = nuclear_data.mode().iloc[0, 1:]\ndescriptive_stats['variance'] = descriptive_stats['std']**2\n\n# Displaying the descriptive statistics\nprint(descriptive_stats[['mean', '50%', 'mode', 'std', 'variance']])\n```\n\nHere are the descriptive statistics for the nuclear plants' utilization factors from 2013 to 2022:\n\n-   **Mean**: The average utilization factor for each year. It ranges from 90.836 in 2013 to 92.916 in 2019.\n\n-   **Median (50%)**: The middle value of the utilization factor for each year. It ranges from 92.55 in 2013 to 94.40 in 2022.\n\n-   **Mode**: The value that appears most frequently in each year. It varies across years, with some years having more common utilization factors than others.\n\n-   **Standard Deviation (std)**: Measures the amount of variation or dispersion from the average. A low standard deviation indicates that the values tend to be close to the mean, while a high standard deviation indicates that the values are spread out over a wider range.\n\n-   **Variance**: The square of the standard deviation. It provides a measure of how spread out the values are.\n\n## **Data Visualization**\n\nIn this section, we'll create visualizations to further explore the data's distribution, relationships between variables, and potential patterns or trends.\n\n1.  **Histograms**: To visualize the distribution of utilization factors for each year.\n\n2.  **Box Plots**: To observe the spread of the data and identify any potential outliers.\n\n### Histograms\n\n```{python}\n# Setting the aesthetic style of the plots\nsns.set_style(\"whitegrid\")\n\n# Creating histograms for the utilization factors of each year\nfig, axes = plt.subplots(nrows=3, ncols=4, figsize=(15, 10))\n\n# Flattening the 2D array of axes for easy iteration\naxes = axes.flatten()\n\n# Plotting the histograms\nfor i, year in enumerate(range(2013, 2023)):\n    sns.histplot(nuclear_data[str(year)], bins=20, kde=True, ax=axes[i])\n    axes[i].set_title(f'Distribution in {year}')\n    axes[i].set_xlabel('Utilization Factor')\n    axes[i].set_ylabel('Frequency')\n\n# Adjusting layout for better readability\nplt.tight_layout()\nplt.show()\n```\n\nThe histograms above depict the distribution of utilization factors for each nuclear plant across different years. Here are some observations:\n\n-   The distribution of utilization factors is fairly symmetric in most years, with a slight skewness in some years.\n\n-   The majority of the nuclear plants seem to operate with a high utilization factor, mostly around 90 to 100.\n\n-   There are a few years (e.g., 2016, 2020) where the distribution appears to be more spread out, indicating higher variability in the utilization factors.\n\n### Box Plots\n\n```{python}\nfig, axes = plt.subplots(nrows=3, ncols=4, figsize=(15, 10))\n\n# Flattening the 2D array of axes for easy iteration\naxes = axes.flatten()\n\n# Plotting the box plots\nfor i, year in enumerate(range(2013, 2023)):\n    sns.boxplot(x=nuclear_data[str(year)], ax=axes[i])\n    axes[i].set_title(f'Box Plot in {year}')\n    axes[i].set_xlabel('Utilization Factor')\n\n# Adjusting layout for better readability\nplt.tight_layout()\nplt.show()\n```\n\nThe box plots above provide a visual representation of the distribution of utilization factors for each year, highlighting the spread of the data and any potential outliers.\n\n-   The median (represented by the line inside the box) is consistently high across all years, mostly above 90.\n\n-   The interquartile range (IQR, represented by the height of the box) is relatively narrow, indicating that the middle 50% of the data points are close to each other.\n\n-   There are some potential outliers in various years, particularly in 2016 and 2020, where the utilization factors are significantly lower than the rest of the data.\n\n## **Correlation Analysis**\n\n```{python}\n# Calculating the correlation matrix\ncorrelation_matrix = nuclear_data.iloc[:, 1:].corr()\n\n# Creating a heatmap to visualize the correlation matrix\nplt.figure(figsize=(10, 8))\nsns.heatmap(correlation_matrix, annot=True, fmt=\".2f\", cmap=\"coolwarm\", vmin=-1, vmax=1)\nplt.title('Correlation Matrix of Utilization Factors (2013-2022)')\nplt.show()\n```\n\n-   Most of the correlations between different years are positive, suggesting that a higher utilization factor in one year is generally associated with a higher utilization factor in another year.\n\n-   The correlation coefficients are mostly in the range of 0.2 to 0.8, indicating a moderate positive relationship between the years.\n\n-   There are some years with higher correlations to each other (e.g., 2017 and 2019 with a correlation of 0.84), suggesting a stronger relationship in performance between these years.\n\n## **Hypothesis Generation**\n\nBased on the observed patterns and relationships in the data, we might formulate hypotheses such as:\n\n1.  **H1**: The utilization factor of a nuclear plant in one year is positively related to its utilization factor in the subsequent year.\n\n2.  **H2**: There are certain nuclear plants that consistently perform better or worse than others across all years.\n\n3.  **H3**: The variability in utilization factors has decreased or increased over the years.\n\n## **Identifying Outliers**\n\n```{python}\n# Calculating the average utilization factor for each nuclear plant over the years\nnuclear_data['Average'] = nuclear_data.iloc[:, 1:].mean(axis=1)\n\n# Displaying the nuclear plants sorted by their average utilization factor\nsorted_plants = nuclear_data[['Plant', 'Average']].sort_values(by='Average', ascending=False)\nprint(sorted_plants)\n```\n\n#### **High Performers:**\n\nThe nuclear plants with the highest average utilization factors over the years are:\n\n1.  **Peach Bottom**: 99.24\n\n2.  **Calvert Cliffs Nuclear Power Plant**: 98.61\n\n3.  **Dresden Generating Station**: 97.56\n\n4.  **Limerick**: 97.48\n\n5.  **Byron Generating Station**: 97.41\n\n#### **Low Performers:**\n\nThe nuclear plants with the lowest average utilization factors are:\n\n1.  **Grand Gulf**: 73.88\n\n2.  **Fermi**: 79.67\n\n3.  **Callaway**: 82.47\n\n4.  **Wolf Creek Generating Station**: 84.91\n\n5.  **Arkansas Nuclear One**: 85.13\n\n```{python}\n# Defining performance tiers based on the average utilization factor\nbins = [0, 80, 90, 95, 100]\nlabels = ['Low Performer (<80)', 'Below Average (80-90)', 'Above Average (90-95)', 'High Performer (>95)']\nnuclear_data['Performance Tier'] = pd.cut(nuclear_data['Average'], bins=bins, labels=labels, right=False)\n\n# Calculating the number of plants in each performance tier\nperformance_tiers = nuclear_data['Performance Tier'].value_counts().sort_index()\n\n# Displaying the number of plants in each performance tier\nprint(performance_tiers)\n```\n\nThe nuclear plants have been categorized into different performance tiers based on their average utilization factor:\n\n1.  **Low Performer (\\<80)**: 2 plants\n\n2.  **Below Average (80-90)**: 12 plants\n\n3.  **Above Average (90-95)**: 25 plants\n\n4.  **High Performer (\\>95)**: 11 plants\n\n```{python}\n# Function to identify outliers using the IQR method\ndef identify_outliers(data, column):\n    Q1 = data[column].quantile(0.25)\n    Q3 = data[column].quantile(0.75)\n    IQR = Q3 - Q1\n    outliers = data[(data[column] < (Q1 - 1.5 * IQR)) | (data[column] > (Q3 + 1.5 * IQR))]\n    return outliers[['Plant', column]]\n\n# Identifying outliers for each year\noutliers_dict = {}\nfor year in range(2013, 2023):\n    outliers = identify_outliers(nuclear_data, str(year))\n    if not outliers.empty:\n        outliers_dict[year] = outliers\n\n# Displaying the outliers for each year\nprint(outliers_dict)\n```\n\n#### **Outliers Identification:**\n\nOutliers have been identified for each year based on the IQR method. Here are the plants that were identified as outliers in each year:\n\n-   **2013**:\n\n    -   Arkansas Nuclear One (73.5)\n\n    -   Fermi (69.4)\n\n    -   Wolf Creek Generating Station (69.6)\n\n-   **2014**:\n\n    -   Davis Besse (74.4)\n\n-   **2016**:\n\n    -   Grand Gulf (47.9)\n\n    -   PSEG Salem Generating Station (76.8)\n\n    -   Watts Bar Nuclear Plant (62.6)\n\n-   **2017**:\n\n    -   Columbia Generating Station (78.8)\n\n    -   Grand Gulf (60.0)\n\n    -   Watts Bar Nuclear Plant (69.0)\n\n-   **2018**:\n\n    -   Fermi (74.2)\n\n    -   Grand Gulf (56.4)\n\n-   **2019**:\n\n    -   River Bend (75.8)\n\n    -   Waterford 3 (74.1)\n\n-   **2020**:\n\n    -   Callaway (70.7)\n\n    -   Fermi (60.6)\n\n    -   Grand Gulf (52.6)\n\n-   **2021**:\n\n    -   Callaway (39.3)\n\n    -   V C Summer (76.5)\n\n-   **2022**:\n\n    -   Fermi (66.7)\n\n    -   Grand Gulf (70.1)\n\n    -   Waterford 3 (77.0)\n\n## **Summary**"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"Exploration.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":"cosmo","title":"Exploration"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}